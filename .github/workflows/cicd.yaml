name: CI/CD

on: [push, pull_request]

jobs:

  test:
    name: Run linting and tests
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached Poetry venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Configure pre-commit
        run: echo "PRE_COMMIT_HOME=.pre-commit-cache" >> $GITHUB_ENV

      - name: Set up pre-commit cache
        uses: actions/cache@v2
        with:
          path: .pre-commit-cache
          key: pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Linting and tests
        run: poetry run pre-commit run --all-files

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: test
    steps:

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Check if git tag exists
        run: echo "HEAD_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - name: Publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tbeijen/klutch
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.HEAD_TAG }}"
          buildargs: "VERSION=${{ env.HEAD_TAG }}"
          no_push: ${{ env.HEAD_TAG == '' }}
          cache: true
