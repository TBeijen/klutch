name: CI/CD

on: [push, pull_request]

jobs:

  test:
    name: Run lintint and tests
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3

      # See: https://github.com/python-poetry/poetry/actions/runs/30094511/workflow
      - name: Configure Poetry
        run: |
          source $HOME/.poetry/env
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config --list

      - name: Configure pre-commit
        run: echo '::set-env name=PRE_COMMIT_HOME::.pre-commit-cache'

      - name: Set up Poetry cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-python-38-${{ hashFiles('**/poetry.lock') }}

      - name: Set up pre-commit cache
        uses: actions/cache@v1
        with:
          path: .pre-commit-cache
          key: pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          poetry install

      - name: Linting and tests
        run: poetry run pre-commit run --all-files

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: test
    steps:

      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      # See: https://github.community/t/how-to-run-github-actions-workflow-only-for-new-tags/16075/20
      - name: Check if git tag exists
        run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"

      - name: Publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tbeijen/klutch
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.HEAD_TAG }}"
          buildargs: "VERSION=${{ env.HEAD_TAG }}"
          no_push: ${{ env.HEAD_TAG == '' }}
