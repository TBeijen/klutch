name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      # - name: Cache Poetry virtualenv
      #   uses: actions/cache@v1
      #   id: cache
      #   with:
      #     path: ~/.virtualenvs
      #     key: poetry-${{ hashFiles('**/poetry.lock') }}
      #     restore-keys: |
      #       poetry-${{ hashFiles('**/poetry.lock') }}

      # - name: Set Poetry config
      #   run: |
      #     poetry config virtualenvs.in-project false
      #     poetry config virtualenvs.path ~/.virtualenvs

      # - name: Install Dependencies
      #   run: poetry install
      #   if: steps.cache.outputs.cache-hit != 'true'

      # - name: Linting and tests
      #   run: poetry run pre-commit run --all-files

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3

      # Based on: https://github.com/python-poetry/poetry/actions/runs/30094511/workflow
      - name: Set up Poetry
        run: |
          source $HOME/.poetry/env
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-python-3.8-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          poetry install

      - name: Linting and tests
        run: poetry run pre-commit run --all-files
